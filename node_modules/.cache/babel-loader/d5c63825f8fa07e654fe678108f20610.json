{"ast":null,"code":"var _jsxFileName = \"/home/naman/Desktop/Naman/B.Tech/projects/ReactApp1/newreact/First-React-App/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport { robots } from './robots';\nimport SearchBox from './SearchBox'; // Now, In this App, we have to add a feature where a search box is there and based on it we have to display\n// the robots. But, the problem is that how will the two components be able to talk to each other since they are seperate \n// from each other. Now , for this we use the term \"State\", which gives the description about the object and it helps in\n// the functioning of various components.\n//  For using State, we have to use the basic version of React, i.e. Using \"Classes\".\n// Lets see the use of classes.I will comment out the code that we had written first\n// const App = ()=>{\n//      return (\n//          <div className=\"tc\">\n//             <h1>Robo Friends</h1>\n//             <SearchBox/>\n//             <CardList robots = {robots}/>\n//         </div>\n//      );\n// }\n\nclass App extends Component {\n  constructor() {\n    super(); // We will create the state object now. The things inside the state can change.\n\n    this.state = {\n      robots: robots,\n      searchfield: ''\n    };\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchfield: event.target.value\n    });\n    const filterRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    console.log(filterRobots);\n  } //  While using classes in react, we have to use render function to return the values\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }, \"Robo Friends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      robots: this.state.robots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/naman/Desktop/Naman/B.Tech/projects/ReactApp1/newreact/First-React-App/src/App.js"],"names":["React","Component","CardList","robots","SearchBox","App","constructor","state","searchfield","onSearchChange","event","setState","target","value","filterRobots","filter","robot","name","toLowerCase","includes","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,GAAE;AACT,YADS,CAET;;AACA,SAAKC,KAAL,GAAa;AACTJ,MAAAA,MAAM,EAAEA,MADC;AAETK,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AACDC,EAAAA,cAAc,CAACC,KAAD,EAAO;AACjB,SAAKC,QAAL,CAAc;AAACH,MAAAA,WAAW,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA3B,KAAd;AACA,UAAMC,YAAY,GAAG,KAAKP,KAAL,CAAWJ,MAAX,CAAkBY,MAAlB,CAAyBC,KAAK,IAAG;AAClD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKZ,KAAL,CAAWC,WAAX,CAAuBU,WAAvB,EAAlC,CAAP;AACH,KAFoB,CAArB;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACH,GAfuB,CAgBxB;;;AACAQ,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,eAEG,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKb,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,eAGG,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAI,KAAKF,KAAL,CAAWJ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADJ;AAOH;;AAzBuB;;AA2B5B,eAAeE,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport CardList from './CardList';\nimport {robots} from './robots';\nimport SearchBox from './SearchBox';\n\n// Now, In this App, we have to add a feature where a search box is there and based on it we have to display\n// the robots. But, the problem is that how will the two components be able to talk to each other since they are seperate \n// from each other. Now , for this we use the term \"State\", which gives the description about the object and it helps in\n// the functioning of various components.\n\n\n//  For using State, we have to use the basic version of React, i.e. Using \"Classes\".\n// Lets see the use of classes.I will comment out the code that we had written first\n// const App = ()=>{\n//      return (\n//          <div className=\"tc\">\n//             <h1>Robo Friends</h1>\n//             <SearchBox/>\n//             <CardList robots = {robots}/>\n//         </div>\n//      );\n// }\n\n\nclass App extends Component {\n    constructor(){\n        super()\n        // We will create the state object now. The things inside the state can change.\n        this.state = {\n            robots: robots,\n            searchfield: ''\n        }\n    }\n    onSearchChange(event){\n        this.setState({searchfield: event.target.value});\n        const filterRobots = this.state.robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        console.log(filterRobots);\n    }\n    //  While using classes in react, we have to use render function to return the values\n    render(){\n        return (\n            <div className=\"tc\">\n               <h1>Robo Friends</h1>\n               <SearchBox searchChange={this.onSearchChange}/>\n               <CardList robots = {this.state.robots}/>\n           </div>\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}