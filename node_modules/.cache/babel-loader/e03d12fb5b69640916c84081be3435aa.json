{"ast":null,"code":"var _jsxFileName = \"/home/naman/Desktop/Naman/B.Tech/projects/ReactApp1/newreact/First-React-App/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\nimport Scroll from './Scroll'; // Now, In this App, we have to add a feature where a search box is there and based on it we have to display\n// the robots. But, the problem is that how will the two components be able to talk to each other since they are seperate \n// from each other. Now , for this we use the term \"State\", which gives the description about the object and it helps in\n// the functioning of various components.\n//  For using State, we have to use the basic version of React, i.e. Using \"Classes\".\n// Lets see the use of classes.I will comment out the code that we had written first\n// const App = ()=>{\n//      return (\n//          <div className=\"tc\">\n//             <h1>Robo Friends</h1>\n//             <SearchBox/>\n//             <CardList robots = {robots}/>\n//         </div>\n//      );\n// }\n// The activities that are called here are in the order:\n// 1. constructor\n// 2. render\n// 3. componentDidMount\n// 4. render (because we are making changes in the componentDidMount and render changes everytime)\n\nclass App extends Component {\n  constructor() {\n    super(); // We will create the state object now. The things inside the state can change.\n\n    this.onSearchChange = event => {\n      // Here we are assigning the searchfield with the values that we are getting from the function call\n      this.setState({\n        searchfield: event.target.value\n      }); // console.log(filterRobots);\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    // Here we are fetching data from the website\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      return response.json();\n    }).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  //  While using classes in react, we have to use render function to return the values\n  render() {\n    const filterRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      }, \"Loading..\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, \"Robo Friends\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(CardList, {\n        robots: filterRobots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/naman/Desktop/Naman/B.Tech/projects/ReactApp1/newreact/First-React-App/src/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filterRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,GAAE;AACT,YADS,CAET;;AAFS,SAkBbC,cAlBa,GAkBKC,KAAD,IAAW;AACxB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd,EAFwB,CAGxB;AACH,KAtBY;;AAGT,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETJ,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyDC,QAAQ,IAAG;AAChE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAFD,EAEGF,IAFH,CAEQG,KAAK,IAAE;AACX,WAAKX,QAAL,CAAc;AAACK,QAAAA,MAAM,EAAEM;AAAT,OAAd;AACH,KAJD;AAKH;;AAOD;AACAC,EAAAA,MAAM,GAAE;AACJ,UAAMC,YAAY,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBC,KAAK,IAAG;AAClD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKd,KAAL,CAAWH,WAAX,CAAuBgB,WAAvB,EAAlC,CAAP;AACH,KAFoB,CAArB;;AAGA,QAAG,KAAKb,KAAL,CAAWC,MAAX,CAAkBc,MAAlB,KAA2B,CAA9B,EAAgC;AAC5B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH,KAFD,MAEK;AACD,0BACI;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,eAGA,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAIe,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CADJ;AAOH;AACJ;;AAxCuB;;AA0C5B,eAAejB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\nimport Scroll from './Scroll';\n\n// Now, In this App, we have to add a feature where a search box is there and based on it we have to display\n// the robots. But, the problem is that how will the two components be able to talk to each other since they are seperate \n// from each other. Now , for this we use the term \"State\", which gives the description about the object and it helps in\n// the functioning of various components.\n\n\n//  For using State, we have to use the basic version of React, i.e. Using \"Classes\".\n// Lets see the use of classes.I will comment out the code that we had written first\n// const App = ()=>{\n//      return (\n//          <div className=\"tc\">\n//             <h1>Robo Friends</h1>\n//             <SearchBox/>\n//             <CardList robots = {robots}/>\n//         </div>\n//      );\n// }\n\n// The activities that are called here are in the order:\n// 1. constructor\n// 2. render\n// 3. componentDidMount\n// 4. render (because we are making changes in the componentDidMount and render changes everytime)\n\nclass App extends Component {\n    constructor(){\n        super()\n        // We will create the state object now. The things inside the state can change.\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        // Here we are fetching data from the website\n        fetch('https://jsonplaceholder.typicode.com/users').then(response =>{\n            return response.json();\n        }).then(users=>{\n            this.setState({robots: users});\n        })\n    }\n\n    onSearchChange = (event) => {\n        // Here we are assigning the searchfield with the values that we are getting from the function call\n        this.setState({ searchfield: event.target.value })\n        // console.log(filterRobots);\n    }\n    //  While using classes in react, we have to use render function to return the values\n    render(){\n        const filterRobots = this.state.robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        if(this.state.robots.length===0){\n            return <h3>Loading..</h3>\n        }else{\n            return (\n                <div className=\"tc\">\n                <h1 className=\"f1\">Robo Friends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <CardList robots = {filterRobots}/>\n            </div>\n            );\n        }\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}